package main

import (
	"bytes"
	"fmt"
	"github.com/FactomProject/factomd/database"
	"github.com/davecgh/go-spew/spew"
	"testing"
)

func TestDblock(t *testing.T) {
	fmt.Println("\nTest dblock===========================================================================")

	initDB()

	dblock, _ := db.FetchDBlockByHeight(0)

	dblock.BuildKeyMerkleRoot()

	dblock2, _ := db.FetchDBlockByMR(dblock.KeyMR)

	if dblock2 == nil {
		t.Errorf("Invalid output: dblock2 not found")
	}
	bytes1, _ := dblock.MarshalBinary()
	bytes2, _ := dblock2.MarshalBinary()

	if bytes.Compare(bytes1, bytes2) != 0 {
		t.Errorf("Invalid output")
	}
}

func TestDblock2(t *testing.T) {
	fmt.Println("\nTest dblock2===========================================================================")

	list, _ := db.FetchHeightRange(0, 5)
	t.Logf("TestDblock2: list=%s\n", spew.Sdump(list))

	height, _ := db.FetchBlockHeightBySha(&list[0])

	t.Logf("height=%s\n", spew.Sdump(height))

	list, _ = db.FetchHeightRange(0, database.AllShas)
	t.Logf("db.FetchHeightRange(0, database.AllShas): list=%s\n", spew.Sdump(list))

	height, _ = db.FetchBlockHeightBySha(&list[0])

	t.Logf("height=%s\n", spew.Sdump(height))

}
